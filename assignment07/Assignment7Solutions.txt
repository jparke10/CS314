2a. What is the cache miss rate assuming a 32x32 2D array with [j][i] access?

I believe the cache miss rate is 1/4 based on the fact that the cache is
initially empty and there are 4 accesses for each inner loop iteration.
If the cache is always initially empty, then nothing will be found in
the first access, considered a miss. It resets every time because of the
fact that we're incrementing j over i, which represents our rows. A 128B
cache starting at a[0][0], for example, would cache ColorPoints a[0][0]
through a[0][3] because the memory block is contiguous, and ColorPoints
are stored as structs inside arrays inside arrays.

2b. What is the cache miss rate assuming a 32x32 2D array with [i][j] access?

The cache miss rate is 1/16 because 128 bytes are loaded with each access,
and because the arrays are read in the order of rows->columns, the access
is sequential. Because of that, the cache will have already loaded [i][1],
[i][2], and [i][3] when [i][0] is accessed for example. So, the miss rate is
a quarter of what it is loading row by row rather than column by column in
the inner loop.
